{
  "contractName": "PausableTokenMock",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_decimals",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Pause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unpause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.25+commit.59dbf8f1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"_owner\":\"address The address which owns the funds.\",\"_spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"_owner\":\"The address to query the the balance of.\"},\"return\":\"An uint256 representing the amount owned by the passed address.\"},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"totalSupply()\":{\"details\":\"total number of tokens in existence\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/ceruleanhu/code/defi/cdc/swap/our/cro-staking/contracts/mocks/PausableTokenMock.sol\":\"PausableTokenMock\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"/Users/ceruleanhu/code/defi/cdc/swap/our/cro-staking/contracts/mocks/PausableTokenMock.sol\":{\"keccak256\":\"0x8d25059b5ba74ed74d0c4b25d0380f7bd425850b216c7cd90875bf1a12472332\",\"urls\":[\"bzzr://8d97654257913e4bff843e434ce81c2b7a59e366a5413e8aa7fd3376cde77cc2\"]},\"openzeppelin-solidity/contracts/lifecycle/Pausable.sol\":{\"keccak256\":\"0x9cba4eb7059b38a00d34429f77f279257609b42c2800612cd5521914c364a492\",\"urls\":[\"bzzr://a0ac5817318a898fcc8f1f3e6c7808f662f484f090651e15dbb3dad7ac47db87\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x6f859ac66b474844c08916cd628b116978fb0f211489a5f45b1fb4a2f7db56b1\",\"urls\":[\"bzzr://761ddde6ebe029775b131a31d4f9d4f1c80f4bae7f13b27421d46fcbc036c662\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x2c92ef64d25ddba75a96b518ab3ad5211c4edab898ac2a693c300274ccd0c675\",\"urls\":[\"bzzr://04335d6d25fbf30171a9ce1d458a570e58af99bf356aaeccc5ff1de1a93ae1b6\"]},\"openzeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":{\"keccak256\":\"0xa1a882b859b5ceac4a879b4820bf5c2eeeee823b563da42abac5ef119fd6e39e\",\"urls\":[\"bzzr://777c837dedf60ac041c14fba015a09803f1e855f5c1203f9952846586c151d9f\"]},\"openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol\":{\"keccak256\":\"0xc41987f84f4c666c364a02d8fbef112ba87c5b0fb46fdecc74fa82d899de50ce\",\"urls\":[\"bzzr://966dc863f6bec6a575cc88c5a968fb24ebfd3a3feae555a617a9a6bec8c82538\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd48f887d15d0411901fc331e74a25d7afa63d89a1257e8e3f43ce1b1e8f4a1e3\",\"urls\":[\"bzzr://09c28b5e4b9323a3675abe0d2f53d78ee30b96f20add8b9432f870df3c8e1970\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0xa36ddb4cd5f04f0f5b7f344819267dd5500467d58949dd012a85876233c9314e\",\"urls\":[\"bzzr://02ed45f8a66dde083a6fae1b27a4f37605c81e3b8a26b7b16dab9537f901535c\"]},\"openzeppelin-solidity/contracts/token/ERC20/PausableToken.sol\":{\"keccak256\":\"0xd94abec1ad66a5167113d79e0aea2ae725cf3d34f8d72b70ea2115199c715391\",\"urls\":[\"bzzr://4bc63b787bc2bc1c8ec960f4f1eee41e7e7b2a09f43efd1d220ea5833afdb6b9\"]},\"openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":{\"keccak256\":\"0xf4ae4ed0fd71f15329df75d165c68afc24385262abbf323f1396ee681f72073d\",\"urls\":[\"bzzr://15200cd33a2959a02dee7bf31c925c5e49ee9df99e463e3007c0e398fc0bc349\"]}},\"version\":1}",
  "bytecode": "0x60806040526003805460a060020a60ff02191690553480156200002157600080fd5b50604051620010c7380380620010c783398101604090815281516020808401519284015160038054600160a060020a031916331790559184018051909493909301928491849184916200007a91600491860190620000d1565b50815162000090906005906020850190620000d1565b506006805460ff191660ff92909216919091179055505069152d02c7e14af68000006001819055336000908152602081905260409020555062000176915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200011457805160ff191683800117855562000144565b8280016001018555821562000144579182015b828111156200014457825182559160200191906001019062000127565b506200015292915062000156565b5090565b6200017391905b808211156200015257600081556001016200015d565b90565b610f4180620001866000396000f3006080604052600436106100f05763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100f5578063095ea7b31461017f57806318160ddd146101c457806323b872dd146101eb578063313ce567146102225780633f4ba83a1461024d5780635c975abb14610264578063661884631461027957806370a08231146102aa578063715018a6146102d85780638456cb59146102ed5780638da5cb5b1461030257806395d89b4114610340578063a9059cbb14610355578063d73dd62314610386578063dd62ed3e146103b7578063f2fde38b146103eb575b600080fd5b34801561010157600080fd5b5061010a610419565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014457818101518382015260200161012c565b50505050905090810190601f1680156101715780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561018b57600080fd5b506101b073ffffffffffffffffffffffffffffffffffffffff600435166024356104c5565b604080519115158252519081900360200190f35b3480156101d057600080fd5b506101d9610501565b60408051918252519081900360200190f35b3480156101f757600080fd5b506101b073ffffffffffffffffffffffffffffffffffffffff60043581169060243516604435610507565b34801561022e57600080fd5b50610237610545565b6040805160ff9092168252519081900360200190f35b34801561025957600080fd5b5061026261054e565b005b34801561027057600080fd5b506101b06105ee565b34801561028557600080fd5b506101b073ffffffffffffffffffffffffffffffffffffffff6004351660243561060f565b3480156102b657600080fd5b506101d973ffffffffffffffffffffffffffffffffffffffff60043516610644565b3480156102e457600080fd5b5061026261066c565b3480156102f957600080fd5b506102626106ff565b34801561030e57600080fd5b506103176107b5565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b34801561034c57600080fd5b5061010a6107d1565b34801561036157600080fd5b506101b073ffffffffffffffffffffffffffffffffffffffff6004351660243561084a565b34801561039257600080fd5b506101b073ffffffffffffffffffffffffffffffffffffffff6004351660243561087f565b3480156103c357600080fd5b506101d973ffffffffffffffffffffffffffffffffffffffff600435811690602435166108b4565b3480156103f757600080fd5b5061026273ffffffffffffffffffffffffffffffffffffffff600435166108ec565b6004805460408051602060026001851615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190941693909304601f810184900484028201840190925281815292918301828280156104bd5780601f10610492576101008083540402835291602001916104bd565b820191906000526020600020905b8154815290600101906020018083116104a057829003601f168201915b505050505081565b60035460009074010000000000000000000000000000000000000000900460ff16156104f057600080fd5b6104fa838361091c565b9392505050565b60015490565b60035460009074010000000000000000000000000000000000000000900460ff161561053257600080fd5b61053d84848461098f565b949350505050565b60065460ff1681565b60035473ffffffffffffffffffffffffffffffffffffffff16331461057257600080fd5b60035474010000000000000000000000000000000000000000900460ff16151561059b57600080fd5b600380547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b60035474010000000000000000000000000000000000000000900460ff1681565b60035460009074010000000000000000000000000000000000000000900460ff161561063a57600080fd5b6104fa8383610b61565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60035473ffffffffffffffffffffffffffffffffffffffff16331461069057600080fd5b60035460405173ffffffffffffffffffffffffffffffffffffffff909116907ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482090600090a2600380547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60035473ffffffffffffffffffffffffffffffffffffffff16331461072357600080fd5b60035474010000000000000000000000000000000000000000900460ff161561074b57600080fd5b600380547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b60035473ffffffffffffffffffffffffffffffffffffffff1681565b6005805460408051602060026001851615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190941693909304601f810184900484028201840190925281815292918301828280156104bd5780601f10610492576101008083540402835291602001916104bd565b60035460009074010000000000000000000000000000000000000000900460ff161561087557600080fd5b6104fa8383610c85565b60035460009074010000000000000000000000000000000000000000900460ff16156108aa57600080fd5b6104fa8383610d8d565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260026020908152604080832093909416825291909152205490565b60035473ffffffffffffffffffffffffffffffffffffffff16331461091057600080fd5b61091981610e40565b50565b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b600073ffffffffffffffffffffffffffffffffffffffff831615156109b357600080fd5b73ffffffffffffffffffffffffffffffffffffffff84166000908152602081905260409020548211156109e557600080fd5b73ffffffffffffffffffffffffffffffffffffffff84166000908152600260209081526040808320338452909152902054821115610a2257600080fd5b73ffffffffffffffffffffffffffffffffffffffff8416600090815260208190526040902054610a58908363ffffffff610ef016565b73ffffffffffffffffffffffffffffffffffffffff8086166000908152602081905260408082209390935590851681522054610a9a908363ffffffff610f0216565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208181526040808320949094559187168152600282528281203382529091522054610ae9908363ffffffff610ef016565b73ffffffffffffffffffffffffffffffffffffffff808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b33600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915281205480831115610bd05733600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff88168452909152812055610c12565b610be0818463ffffffff610ef016565b33600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff891684529091529020555b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff89168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600073ffffffffffffffffffffffffffffffffffffffff83161515610ca957600080fd5b33600090815260208190526040902054821115610cc557600080fd5b33600090815260208190526040902054610ce5908363ffffffff610ef016565b336000908152602081905260408082209290925573ffffffffffffffffffffffffffffffffffffffff851681522054610d24908363ffffffff610f0216565b73ffffffffffffffffffffffffffffffffffffffff8416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b33600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff86168452909152812054610dce908363ffffffff610f0216565b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff89168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b73ffffffffffffffffffffffffffffffffffffffff81161515610e6257600080fd5b60035460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600082821115610efc57fe5b50900390565b81810182811015610f0f57fe5b929150505600a165627a7a72305820332e4dc5daeb7c0e5f20177f7ad70c4a270554610d4da30b6d6ef6d28536c26b0029",
  "deployedBytecode": "0x6080604052600436106100f05763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100f5578063095ea7b31461017f57806318160ddd146101c457806323b872dd146101eb578063313ce567146102225780633f4ba83a1461024d5780635c975abb14610264578063661884631461027957806370a08231146102aa578063715018a6146102d85780638456cb59146102ed5780638da5cb5b1461030257806395d89b4114610340578063a9059cbb14610355578063d73dd62314610386578063dd62ed3e146103b7578063f2fde38b146103eb575b600080fd5b34801561010157600080fd5b5061010a610419565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014457818101518382015260200161012c565b50505050905090810190601f1680156101715780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561018b57600080fd5b506101b073ffffffffffffffffffffffffffffffffffffffff600435166024356104c5565b604080519115158252519081900360200190f35b3480156101d057600080fd5b506101d9610501565b60408051918252519081900360200190f35b3480156101f757600080fd5b506101b073ffffffffffffffffffffffffffffffffffffffff60043581169060243516604435610507565b34801561022e57600080fd5b50610237610545565b6040805160ff9092168252519081900360200190f35b34801561025957600080fd5b5061026261054e565b005b34801561027057600080fd5b506101b06105ee565b34801561028557600080fd5b506101b073ffffffffffffffffffffffffffffffffffffffff6004351660243561060f565b3480156102b657600080fd5b506101d973ffffffffffffffffffffffffffffffffffffffff60043516610644565b3480156102e457600080fd5b5061026261066c565b3480156102f957600080fd5b506102626106ff565b34801561030e57600080fd5b506103176107b5565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b34801561034c57600080fd5b5061010a6107d1565b34801561036157600080fd5b506101b073ffffffffffffffffffffffffffffffffffffffff6004351660243561084a565b34801561039257600080fd5b506101b073ffffffffffffffffffffffffffffffffffffffff6004351660243561087f565b3480156103c357600080fd5b506101d973ffffffffffffffffffffffffffffffffffffffff600435811690602435166108b4565b3480156103f757600080fd5b5061026273ffffffffffffffffffffffffffffffffffffffff600435166108ec565b6004805460408051602060026001851615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190941693909304601f810184900484028201840190925281815292918301828280156104bd5780601f10610492576101008083540402835291602001916104bd565b820191906000526020600020905b8154815290600101906020018083116104a057829003601f168201915b505050505081565b60035460009074010000000000000000000000000000000000000000900460ff16156104f057600080fd5b6104fa838361091c565b9392505050565b60015490565b60035460009074010000000000000000000000000000000000000000900460ff161561053257600080fd5b61053d84848461098f565b949350505050565b60065460ff1681565b60035473ffffffffffffffffffffffffffffffffffffffff16331461057257600080fd5b60035474010000000000000000000000000000000000000000900460ff16151561059b57600080fd5b600380547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b60035474010000000000000000000000000000000000000000900460ff1681565b60035460009074010000000000000000000000000000000000000000900460ff161561063a57600080fd5b6104fa8383610b61565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60035473ffffffffffffffffffffffffffffffffffffffff16331461069057600080fd5b60035460405173ffffffffffffffffffffffffffffffffffffffff909116907ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482090600090a2600380547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60035473ffffffffffffffffffffffffffffffffffffffff16331461072357600080fd5b60035474010000000000000000000000000000000000000000900460ff161561074b57600080fd5b600380547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b60035473ffffffffffffffffffffffffffffffffffffffff1681565b6005805460408051602060026001851615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190941693909304601f810184900484028201840190925281815292918301828280156104bd5780601f10610492576101008083540402835291602001916104bd565b60035460009074010000000000000000000000000000000000000000900460ff161561087557600080fd5b6104fa8383610c85565b60035460009074010000000000000000000000000000000000000000900460ff16156108aa57600080fd5b6104fa8383610d8d565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260026020908152604080832093909416825291909152205490565b60035473ffffffffffffffffffffffffffffffffffffffff16331461091057600080fd5b61091981610e40565b50565b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b600073ffffffffffffffffffffffffffffffffffffffff831615156109b357600080fd5b73ffffffffffffffffffffffffffffffffffffffff84166000908152602081905260409020548211156109e557600080fd5b73ffffffffffffffffffffffffffffffffffffffff84166000908152600260209081526040808320338452909152902054821115610a2257600080fd5b73ffffffffffffffffffffffffffffffffffffffff8416600090815260208190526040902054610a58908363ffffffff610ef016565b73ffffffffffffffffffffffffffffffffffffffff8086166000908152602081905260408082209390935590851681522054610a9a908363ffffffff610f0216565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208181526040808320949094559187168152600282528281203382529091522054610ae9908363ffffffff610ef016565b73ffffffffffffffffffffffffffffffffffffffff808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b33600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915281205480831115610bd05733600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff88168452909152812055610c12565b610be0818463ffffffff610ef016565b33600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff891684529091529020555b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff89168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600073ffffffffffffffffffffffffffffffffffffffff83161515610ca957600080fd5b33600090815260208190526040902054821115610cc557600080fd5b33600090815260208190526040902054610ce5908363ffffffff610ef016565b336000908152602081905260408082209290925573ffffffffffffffffffffffffffffffffffffffff851681522054610d24908363ffffffff610f0216565b73ffffffffffffffffffffffffffffffffffffffff8416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b33600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff86168452909152812054610dce908363ffffffff610f0216565b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff89168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b73ffffffffffffffffffffffffffffffffffffffff81161515610e6257600080fd5b60035460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600082821115610efc57fe5b50900390565b81810182811015610f0f57fe5b929150505600a165627a7a72305820332e4dc5daeb7c0e5f20177f7ad70c4a270554610d4da30b6d6ef6d28536c26b0029",
  "sourceMap": "172:256:9:-;;;247:26:10;;;-1:-1:-1;;;;;;247:26:10;;;235:191:9;5:2:-1;;;;30:1;27;20:12;5:2;235:191:9;;;;;;;;;;;;;;;;;;;;;;;;;;;567:5:12;:18;;-1:-1:-1;;;;;;567:18:12;575:10;567:18;;;235:191:9;;;463:12:14;;235:191:9;;;;;;;;;;;;;463:12:14;;:4;;:12;;;;:::i;:::-;-1:-1:-1;481:16:14;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;503:8:14;:20;;-1:-1:-1;;503:20:14;;;;;;;;;;;;-1:-1:-1;;363:17:9;-1:-1:-1;348:32:9;;;395:10;-1:-1:-1;386:20:9;;;;;;;;;;:35;-1:-1:-1;172:256:9;;-1:-1:-1;;172:256:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;172:256:9;;;-1:-1:-1;172:256:9;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "172:256:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;319:18:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;319:18:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;319:18:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;592:162:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;592:162:17;;;;;;;;;;;;;;;;;;;;;;;;;;;371:83:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;371:83:13;;;;;;;;;;;;;;;;;;;;400:188:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;400:188:17;;;;;;;;;;;;;;365:21:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;365:21:14;;;;;;;;;;;;;;;;;;;;;;;838:92:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;838:92:10;;;;;;247:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;247:26:10;;;;957:205:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;957:205:17;;;;;;;;;1131:99:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1131:99:13;;;;;;;827:111:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;827:111:12;;;;666:90:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;666:90:10;;;;238:20:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:12;;;;;;;;;;;;;;;;;;;;;;;341::14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;341:20:14;;;;242:154:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;242:154:17;;;;;;;;;758:195;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;758:195:17;;;;;;;;;2336:153:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2336:153:18;;;;;;;;;;;;1100:103:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1100:103:12;;;;;;;319:18:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;592:162:17:-;416:6:10;;697:4:17;;416:6:10;;;;;415:7;407:16;;;;;;718:31:17;732:8;742:6;718:13;:31::i;:::-;711:38;592:162;-1:-1:-1;;;592:162:17:o;371:83:13:-;437:12;;371:83;:::o;400:188:17:-;416:6:10;;524:4:17;;416:6:10;;;;;415:7;407:16;;;;;;545:38:17;564:5;571:3;576:6;545:18;:38::i;:::-;538:45;400:188;-1:-1:-1;;;;400:188:17:o;365:21:14:-;;;;;;:::o;838:92:10:-;719:5:12;;;;705:10;:19;697:28;;;;;;568:6:10;;;;;;;560:15;;;;;;;;891:6;:14;;;;;;916:9;;;;900:5;;916:9;838:92::o;247:26::-;;;;;;;;;:::o;957:205:17:-;416:6:10;;1078:12:17;;416:6:10;;;;;415:7;407:16;;;;;;1107:50:17;1130:8;1140:16;1107:22;:50::i;1131:99:13:-;1209:16;;1187:7;1209:16;;;;;;;;;;;;1131:99::o;827:111:12:-;719:5;;;;705:10;:19;697:28;;;;;;903:5;;884:25;;903:5;;;;;884:25;;903:5;;884:25;915:5;:18;;;;;;827:111::o;666:90:10:-;719:5:12;;;;705:10;:19;697:28;;;;;;416:6:10;;;;;;;415:7;407:16;;;;;;720:6;:13;;;;;;;;744:7;;;;720:13;;744:7;666:90::o;238:20:12:-;;;;;;:::o;341::14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;242:154:17;416:6:10;;343:4:17;;416:6:10;;;;;415:7;407:16;;;;;;364:27:17;379:3;384:6;364:14;:27::i;758:195::-;416:6:10;;874:12:17;;416:6:10;;;;;415:7;407:16;;;;;;903:45:17;926:8;936:11;903:22;:45::i;2336:153:18:-;2459:15;;;;2435:7;2459:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;2336:153::o;1100:103:12:-;719:5;;;;705:10;:19;697:28;;;;;;1169:29;1188:9;1169:18;:29::i;:::-;1100:103;:::o;1829:188:18:-;1916:10;1896:4;1908:19;;;:7;:19;;;;;;;;;:29;;;;;;;;;;;:38;;;1957;;;;;;;1896:4;;1908:29;;1916:10;;1957:38;;;;;;;;-1:-1:-1;2008:4:18;1829:188;;;;:::o;736:470::-;842:4;864:17;;;;;856:26;;;;;;906:15;;;:8;:15;;;;;;;;;;;896:25;;;888:34;;;;;;946:14;;;;;;;:7;:14;;;;;;;;961:10;946:26;;;;;;;;936:36;;;928:45;;;;;;998:15;;;:8;:15;;;;;;;;;;;:27;;1018:6;998:27;:19;:27;:::i;:::-;980:15;;;;:8;:15;;;;;;;;;;;:45;;;;1047:13;;;;;;;:25;;1065:6;1047:25;:17;:25;:::i;:::-;1031:13;;;;:8;:13;;;;;;;;;;;:41;;;;1107:14;;;;;:7;:14;;;;;1122:10;1107:26;;;;;;;:38;;1138:6;1107:38;:30;:38;:::i;:::-;1078:14;;;;;;;;:7;:14;;;;;;;;1093:10;1078:26;;;;;;;;:67;;;;1156:28;;;;;;;;;;;1078:14;;1156:28;;;;;;;;;;;-1:-1:-1;1197:4:18;736:470;;;;;:::o;3701:425::-;3842:10;3804:4;3834:19;;;:7;:19;;;;;;;;;:29;;;;;;;;;;3873:27;;;3869:164;;;3918:10;3942:1;3910:19;;;:7;:19;;;;;;;;;:29;;;;;;;;;:33;3869:164;;;3996:30;:8;4009:16;3996:30;:12;:30;:::i;:::-;3972:10;3964:19;;;;:7;:19;;;;;;;;;:29;;;;;;;;;:62;3869:164;4052:10;4074:19;;;;:7;:19;;;;;;;;4043:61;;;4074:29;;;;;;;;;;;4043:61;;;;;;;;;4052:10;4043:61;;;;;;;;;;;-1:-1:-1;4117:4:18;;3701:425;-1:-1:-1;;;3701:425:18:o;608:321:13:-;671:4;691:17;;;;;683:26;;;;;;742:10;733:8;:20;;;;;;;;;;;723:30;;;715:39;;;;;;793:10;784:8;:20;;;;;;;;;;;:32;;809:6;784:32;:24;:32;:::i;:::-;770:10;761:8;:20;;;;;;;;;;;:55;;;;:20;838:13;;;;;;:25;;856:6;838:25;:17;:25;:::i;:::-;822:13;;;:8;:13;;;;;;;;;;;;:41;;;;874:33;;;;;;;822:13;;883:10;;874:33;;;;;;;;;;-1:-1:-1;920:4:13;608:321;;;;:::o;2946:293:18:-;3106:10;3044:4;3098:19;;;:7;:19;;;;;;;;;:29;;;;;;;;;;:46;;3132:11;3098:46;:33;:46;:::i;:::-;3066:10;3058:19;;;;:7;:19;;;;;;;;;:29;;;;;;;;;;;;:87;;;3156:61;;;;;;3058:29;;3156:61;;;;;;;;;;;-1:-1:-1;3230:4:18;2946:293;;;;:::o;1338:171:12:-;1408:23;;;;;1400:32;;;;;;1464:5;;1443:38;;;;;;;1464:5;;1443:38;;1464:5;;1443:38;1487:5;:17;;;;;;;;;;;;;;;1338:171::o;1042:110:11:-;1100:7;1122:6;;;;1115:14;;;;-1:-1:-1;1142:5:11;;;1042:110::o;1214:123::-;1293:5;;;1311:6;;;;1304:14;;;;1214:123;;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/PausableToken.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol\";\n\n\ncontract PausableTokenMock is PausableToken, DetailedERC20 {\n  constructor(string _name, string _symbol, uint8 _decimals) DetailedERC20(_name, _symbol, _decimals) public {\n    totalSupply_ = 100000 * 10 ** 18;\n    balances[msg.sender] = totalSupply_;\n  }\n}\n",
  "sourcePath": "/Users/ceruleanhu/code/defi/cdc/swap/our/cro-staking/contracts/mocks/PausableTokenMock.sol",
  "ast": {
    "absolutePath": "/Users/ceruleanhu/code/defi/cdc/swap/our/cro-staking/contracts/mocks/PausableTokenMock.sol",
    "exportedSymbols": {
      "PausableTokenMock": [
        1242
      ]
    },
    "id": 1243,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1205,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:9"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/PausableToken.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/PausableToken.sol",
        "id": 1206,
        "nodeType": "ImportDirective",
        "scope": 1243,
        "sourceUnit": 1790,
        "src": "26:71:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol",
        "id": 1207,
        "nodeType": "ImportDirective",
        "scope": 1243,
        "sourceUnit": 1613,
        "src": "98:71:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1208,
              "name": "PausableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1789,
              "src": "202:13:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PausableToken_$1789",
                "typeString": "contract PausableToken"
              }
            },
            "id": 1209,
            "nodeType": "InheritanceSpecifier",
            "src": "202:13:9"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1210,
              "name": "DetailedERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1612,
              "src": "217:13:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DetailedERC20_$1612",
                "typeString": "contract DetailedERC20"
              }
            },
            "id": 1211,
            "nodeType": "InheritanceSpecifier",
            "src": "217:13:9"
          }
        ],
        "contractDependencies": [
          1302,
          1482,
          1578,
          1612,
          1655,
          1687,
          1789,
          2036
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1242,
        "linearizedBaseContracts": [
          1242,
          1612,
          1789,
          1302,
          1482,
          2036,
          1578,
          1655,
          1687
        ],
        "name": "PausableTokenMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1240,
              "nodeType": "Block",
              "src": "342:84:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1225,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1497,
                      "src": "348:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                        "typeString": "int_const 100000000000000000000000"
                      },
                      "id": 1230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "313030303030",
                        "id": 1226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "363:6:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100000"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "id": 1229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 1227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "372:2:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3138",
                          "id": 1228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "378:2:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "src": "372:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "363:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                        "typeString": "int_const 100000000000000000000000"
                      }
                    },
                    "src": "348:32:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1232,
                  "nodeType": "ExpressionStatement",
                  "src": "348:32:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1233,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1495,
                        "src": "386:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1236,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1234,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2051,
                          "src": "395:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "395:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "386:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1237,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1497,
                      "src": "409:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "386:35:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1239,
                  "nodeType": "ExpressionStatement",
                  "src": "386:35:9"
                }
              ]
            },
            "documentation": null,
            "id": 1241,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1220,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1213,
                    "src": "308:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1221,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1215,
                    "src": "315:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1222,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1217,
                    "src": "324:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 1223,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1219,
                  "name": "DetailedERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1612,
                  "src": "294:13:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_DetailedERC20_$1612_$",
                    "typeString": "type(contract DetailedERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "294:40:9"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1213,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1241,
                  "src": "247:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1212,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "247:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1215,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1241,
                  "src": "261:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1214,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "261:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1217,
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 1241,
                  "src": "277:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1216,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "277:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "246:47:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 1224,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "342:0:9"
            },
            "scope": 1242,
            "src": "235:191:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1243,
        "src": "172:256:9"
      }
    ],
    "src": "0:429:9"
  },
  "legacyAST": {
    "absolutePath": "/Users/ceruleanhu/code/defi/cdc/swap/our/cro-staking/contracts/mocks/PausableTokenMock.sol",
    "exportedSymbols": {
      "PausableTokenMock": [
        1242
      ]
    },
    "id": 1243,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1205,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:9"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/PausableToken.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/PausableToken.sol",
        "id": 1206,
        "nodeType": "ImportDirective",
        "scope": 1243,
        "sourceUnit": 1790,
        "src": "26:71:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol",
        "id": 1207,
        "nodeType": "ImportDirective",
        "scope": 1243,
        "sourceUnit": 1613,
        "src": "98:71:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1208,
              "name": "PausableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1789,
              "src": "202:13:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PausableToken_$1789",
                "typeString": "contract PausableToken"
              }
            },
            "id": 1209,
            "nodeType": "InheritanceSpecifier",
            "src": "202:13:9"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1210,
              "name": "DetailedERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1612,
              "src": "217:13:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DetailedERC20_$1612",
                "typeString": "contract DetailedERC20"
              }
            },
            "id": 1211,
            "nodeType": "InheritanceSpecifier",
            "src": "217:13:9"
          }
        ],
        "contractDependencies": [
          1302,
          1482,
          1578,
          1612,
          1655,
          1687,
          1789,
          2036
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1242,
        "linearizedBaseContracts": [
          1242,
          1612,
          1789,
          1302,
          1482,
          2036,
          1578,
          1655,
          1687
        ],
        "name": "PausableTokenMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1240,
              "nodeType": "Block",
              "src": "342:84:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1225,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1497,
                      "src": "348:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                        "typeString": "int_const 100000000000000000000000"
                      },
                      "id": 1230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "313030303030",
                        "id": 1226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "363:6:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100000"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "id": 1229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 1227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "372:2:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3138",
                          "id": 1228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "378:2:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "src": "372:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "363:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                        "typeString": "int_const 100000000000000000000000"
                      }
                    },
                    "src": "348:32:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1232,
                  "nodeType": "ExpressionStatement",
                  "src": "348:32:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1233,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1495,
                        "src": "386:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1236,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1234,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2051,
                          "src": "395:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "395:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "386:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1237,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1497,
                      "src": "409:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "386:35:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1239,
                  "nodeType": "ExpressionStatement",
                  "src": "386:35:9"
                }
              ]
            },
            "documentation": null,
            "id": 1241,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1220,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1213,
                    "src": "308:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1221,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1215,
                    "src": "315:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1222,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1217,
                    "src": "324:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 1223,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1219,
                  "name": "DetailedERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1612,
                  "src": "294:13:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_DetailedERC20_$1612_$",
                    "typeString": "type(contract DetailedERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "294:40:9"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1213,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1241,
                  "src": "247:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1212,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "247:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1215,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1241,
                  "src": "261:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1214,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "261:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1217,
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 1241,
                  "src": "277:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1216,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "277:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "246:47:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 1224,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "342:0:9"
            },
            "scope": 1242,
            "src": "235:191:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1243,
        "src": "172:256:9"
      }
    ],
    "src": "0:429:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625": {
          "anonymous": false,
          "inputs": [],
          "name": "Pause",
          "type": "event"
        },
        "0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33": {
          "anonymous": false,
          "inputs": [],
          "name": "Unpause",
          "type": "event"
        },
        "0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipRenounced",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x5284fAB1638D281ECC18A8d6645aE2D4af6ebe8F",
      "transactionHash": "0xdbef82ca0451968065e69f3d01536f9c16ef2d0f7e117493047351ec26fdf3d1"
    }
  },
  "schemaVersion": "3.2.4",
  "updatedAt": "2020-09-03T06:02:18.278Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "_owner": "address The address which owns the funds.",
          "_spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "_owner": "The address to query the the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "pause()": {
        "details": "called by the owner to pause, triggers stopped state"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "totalSupply()": {
        "details": "total number of tokens in existence"
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "_newOwner": "The address to transfer ownership to."
        }
      },
      "unpause()": {
        "details": "called by the owner to unpause, returns to normal state"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}